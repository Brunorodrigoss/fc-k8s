apiVersion: apps/v1
kind: Deployment
metadata:
  name: goserver
  labels:
    app: goserver
spec:
  selector:
    matchLabels:
      app: goserver
  replicas: 1
  template:
    metadata:
      labels:
        app: "goserver"
    spec:
      containers:
        - name: goserver
          image: "brunorodrigoss/hello-go:v5.9"

          resources:
            requests:
              cpu: 100m # 1vCPU = 1000m (m=milicores) or using porcentage 0.5 of 1000m = 500m
              memory: 20Mi
            limits:
              cpu: 500m
              memory: 23Mi

          startupProbe:
            httpGet:
              path: /healthz
              port: 8000
            periodSeconds: 3
            failureThreshold: 30

          readinessProbe:
            httpGet:
              path: /healthz
              port: 8000
            periodSeconds: 3
            failureThreshold: 1
            timeoutSeconds: 1
            successThreshold: 1
            #initialDelaySeconds: 10

          livenessProbe:
            httpGet:
              path: /healthz
              port: 8000
            periodSeconds: 5
            failureThreshold: 1
            timeoutSeconds: 1
            successThreshold: 1
            #initialDelaySeconds: 15

          envFrom:
            - configMapRef:
                name: goserver-env
            - secretRef:
                name: goserver-secret

          volumeMounts:
            - mountPath: "/go/pvc"
              name: goserver-volume

            - mountPath: "/go/mydummyconfig"
              name: config
              readOnly: true

      volumes:
        - name: goserver-volume
          persistentVolumeClaim:
            claimName: goserver-pvc

        - name: config
          configMap:
            name: configmap-myconfig
            items:
              - key: environments
                path: "myconfig.txt"
